(function() {var implementors = {};
implementors["fxa_client"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"enum\" href=\"fxa_client/internal/enum.IncomingDeviceCommand.html\" title=\"enum fxa_client::internal::IncomingDeviceCommand\">IncomingDeviceCommand</a>&gt; for <a class=\"enum\" href=\"fxa_client/enum.IncomingDeviceCommand.html\" title=\"enum fxa_client::IncomingDeviceCommand\">IncomingDeviceCommand</a>","synthetic":false,"types":["fxa_client::IncomingDeviceCommand"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"fxa_client/internal/device/struct.Device.html\" title=\"struct fxa_client::internal::device::Device\">GetDeviceResponse</a>&gt; for <a class=\"struct\" href=\"fxa_client/struct.Device.html\" title=\"struct fxa_client::Device\">Device</a>","synthetic":false,"types":["fxa_client::Device"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://docs.rs/url/2.2.2/url/struct.Url.html\" title=\"struct url::Url\">Url</a>&gt; for <a class=\"struct\" href=\"fxa_client/struct.AuthorizationParameters.html\" title=\"struct fxa_client::AuthorizationParameters\">AuthorizationParameters</a>","synthetic":false,"types":["fxa_client::AuthorizationParameters"]}];
implementors["nimbus"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'_ <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"nimbus/versioning/struct.Version.html\" title=\"struct nimbus::versioning::Version\">Version</a>","synthetic":false,"types":["nimbus::versioning::Version"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.60.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"struct\" href=\"nimbus/versioning/struct.Version.html\" title=\"struct nimbus::versioning::Version\">Version</a>","synthetic":false,"types":["nimbus::versioning::Version"]}];
implementors["places"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u16.html\">u16</a>&gt; for <a class=\"struct\" href=\"places/types/struct.VisitTransitionSet.html\" title=\"struct places::types::VisitTransitionSet\">VisitTransitionSet</a>","synthetic":false,"types":["places::types::visit_transition_set::VisitTransitionSet"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.u8.html\">u8</a>&gt; for <a class=\"enum\" href=\"places/types/enum.VisitTransition.html\" title=\"enum places::types::VisitTransition\">VisitTransition</a>","synthetic":false,"types":["places::types::VisitTransition"]}];
implementors["sync15_traits"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'_ <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.str.html\">str</a>&gt; for <a class=\"enum\" href=\"sync15_traits/enum.SyncEngineId.html\" title=\"enum sync15_traits::SyncEngineId\">SyncEngineId</a>","synthetic":false,"types":["sync15_traits::engine::SyncEngineId"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()